odinson {

  state {
    jdbc {
      url = "jdbc:h2:mem:odinson"
    }
  }

  compiler {

    # fields available per token
    allTokenFields = [
      ${odinson.index.rawTokenField},
      ${odinson.index.wordTokenField},
      ${odinson.index.normalizedTokenField},
      ${odinson.index.lemmaTokenField},
      ${odinson.index.posTagTokenField},
      ${odinson.index.chunkTokenField},
      ${odinson.index.entityTokenField},
      ${odinson.index.incomingTokenField},
      ${odinson.index.outgoingTokenField},
    ]

    # the token field to be used when none is specified
    defaultTokenField = ${odinson.index.normalizedTokenField}

    sentenceLengthField = ${odinson.index.sentenceLengthField}

    dependenciesField = ${odinson.index.dependenciesField}

    incomingTokenField = ${odinson.index.incomingTokenField}

    outgoingTokenField = ${odinson.index.outgoingTokenField}

    # if we are using the normalizedTokenField as the default
    # then we should normalize the queries to the default field
    # so that they match
    normalizeQueriesToDefaultField = true

  }

  index {

    # the raw token
    rawTokenField = raw

    # the word itself
    wordTokenField = word

    # a normalized version of the token
    normalizedTokenField = norm

    lemmaTokenField = lemma

    posTagTokenField = tag

    chunkTokenField = chunk

    entityTokenField = entity

    incomingTokenField = incoming

    outgoingTokenField = outgoing

    dependenciesField = dependencies

    documentIdField = docId

    sentenceIdField = sentId

    sentenceLengthField = numWords

    maxNumberOfTokensPerSentence = 100

    // SortedDocValuesField can store values of at most 32766 bytes long.
    // See https://lucene.apache.org/core/6_6_0/core/org/apache/lucene/document/SortedDocValuesField.html
    sortedDocValuesFieldMaxSize = 32766

  }

}